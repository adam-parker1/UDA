NOTES on Plugin Development

1> Utilise the C library libs3 from https://github.com/bji/libs3/blob/master/src/s3.c

2> The command line tool src/s3.c provides for libs3 functionality

3> Create an AWS Free Usage Tier (5GB, 20k get requests, 2k put requests, 15GB data transfer per month)

	AWS account name: ukaea
	Email address: david.muir@ukaea.uk
	Password: Thursday/Nov/2017 
	
	requires a credit card!!!! 
	
4> AWS getting started resource centre
	https://www.amazon.com/gp/r.html?C=ASNZCWDUG167&M=urn:correios:msg:201711161638329b596e7b655c432580b55d902640p0na&R=3A49727N168MX&T=C&U=https%3A%2F%2Faws.amazon.com%2Fgetting-started%2F%3Fsc_channel%3Dem%26sc_campaign%3Dwlcm%26sc_publisher%3Daws%26sc_medium%3Dem_wlcm_1%26sc_detail%3Dwlcm_1d%26sc_content%3Dother%26sc_country%3Dglobal%26sc_geo%3Dglobal%26sc_category%3Dmult%26ref_%3Dpe_1679150_261538020&A=XXXSXPQAFXTMOVASYAROIYEXKJMA&H=78QPQDFVGJIHIUA3LMNSNUEKA10A&ref_=pe_1679150_261538020
	
	
5> Example AWS: https://s3.amazonaws.com/myownbucket-8675309/my-internet-chart/my-webpage.html
	downloads a image file
	
6> Use CURL: see ~/IDAM/test/source/plugins/http/readWebServer.c

7> Use CURL with S3: see - http://czak.pl/2015/09/15/s3-rest-api-with-curl.html	

8> see https://github.com/forrestcavalier/librockFillAndSign
	Fill a CURL config file template with AWS signature
	
9> Amazon S3 download with CURL: https://gist.github.com/Mindgames/556dc7d1e452d0cefcb7
#!/bin/sh 
file=path/to/file 
bucket=your-bucket 
resource="/${bucket}/${file}" 
contentType="application/x-compressed-tar" 
dateValue="`date +'%a, %d %b %Y %H:%M:%S %z'`" 
stringToSign="GET 
${contentType} 
${dateValue} 
${resource}" 
s3Key=xxxxxxxxxxxxxxxxxxxx 
s3Secret=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
signature=`/bin/echo -en "$stringToSign" | openssl sha1 -hmac ${s3Secret} -binary | base64`
curl -H "Host: ${bucket}.s3.amazonaws.com" \
-H "Date: ${dateValue}" \
-H "Content-Type: ${contentType}" \ 
-H "Authorization: AWS ${s3Key}:${signature}" \ 
https://${bucket}.s3.amazonaws.com/${file}

10> See also (another script using CURL) https://gist.github.com/tabolario/93f24c6feefe353e14bd

11> Test using: https://devforgalaxy.github.io/en/2017/02/14/use-fake-s3-to-test-aws-s3-api-en.html

=======================================
Install AWS C++ SDK

1> git clone https://github.com/aws/aws-sdk-cpp.git
2> cd aws-sdk-cpp
3> cmake -DBUILD_ONLY="s3"
4> make
5> sudo make install
	/usr/local/include/aws
	/usr/local/lib64/libaws-cpp-sdk-core.so
	/usr/local/lib64/libaws-cpp-sdk-s3.so
	/usr/local/lib64/pkgconfig/aws-cpp-sdk-s3.pc
6> Create AWS credentials file: ~/.aws/credentials
	[default]
	aws_access_key_id = your_access_key_id
	aws_secret_access_key = your_secret_access_key
7> or create environment variables
	export AWS_ACCESS_KEY_ID=your_access_key_id
	export AWS_SECRET_ACCESS_KEY=your_secret_access_key
8> View example S3 code at: http://docs.aws.amazon.com/sdk-for-cpp/v1/developer-guide/examples-s3.html	
	create_bucket.cpp
	list_buckets.cpp
	delete_bucket.cpp
	put_object.cpp
	list_objects.cpp
	get_object.cpp
	delete_object.cpp
9> sudo ln -s /usr/lib64/libuuid.so.1.3.0 /usr/lib64/libuuid.so
10> Create ~/privatemodules/aws3
11> Create uda/source/plugins/aws/bld to build the test codes

=========================
admin		AKIAJ4MJJO24HTL2SKWQ	2B7B3oHXim6/kQwBoHPGFRwA2nIqzbm7cjOzETv4
readonly	AKIAJTDJGLCMSJX6AOZA	LrSqOhow1XMUpgChwS/ry7vvR4DosKG/nQDzYe1Z
developer	AKIAJO5HQYUGK3IF6FXQ	KYIoWeIG4hWCpHH2+0RsAHhuwHiR7oTjDeO8/xdO
	
	
		

		
		


// Public definitions of Data Structures used by the General Structure Passing system
//
// These structures must be identical to those within idamgenstructpublic.h
//
// Change History
//
// 22Nov2011	D.G.Muir	Original Version
//-------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------  
// Macro definitions

#define MAXELEMENTNAME		256	// structure element name

typedef char STRING;

//-------------------------------------------------------------------------------------------------------  
// Structure types

struct SARRAY {				        // This structure must be parsed to create a structure definition.
					                // Its function is to send or receive arrays of user defined structures and
					                // atomic types. Single user defined structures can be passed directly.
   int   count;				        // Number of data array elements
   int   rank;				        // Rank of the data array
   int  *shape;				        // Shape of the data array
   void *data;				        // Location of the Structure Array
   STRING type[MAXELEMENTNAME];		// The Structure Array Element's type name (Must be Unique)
 } ;
typedef struct SARRAY SARRAY ;

struct ENUMMEMBER {
   STRING name[MAXELEMENTNAME];		// The Enumeration member name
   long long value;			        // The value of the member
};  
typedef struct ENUMMEMBER ENUMMEMBER;

struct ENUMLIST {
   STRING name[MAXELEMENTNAME];		// The Enumeration name  
   int type;				        // The integer base type
   int count;				        // The number of members of this enumeration class
   ENUMMEMBER *enummember;		    // Array of enum members
   void *data;				        // Data with this enumerated type (properties are held by regular DATA_BLOCK structure)
 } ;
typedef struct ENUMLIST ENUMLIST;
